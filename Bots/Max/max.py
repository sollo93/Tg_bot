import asyncio
from maxgram import MaxBot, MaxDispatcher, types

# ---- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ----
API_TOKEN = "–í–ê–®_MAX_–¢–û–ö–ï–ù"
bot = MaxBot(token=API_TOKEN)
dp = MaxDispatcher()

# ---- –î–∞–Ω–Ω—ã–µ ----
SOCIAL_LINKS = [
    ("Instagram", "https://instagram.com/your_profile"),
    ("VK", "https://vk.com/your_profile")
]
OFFICIAL_SITE = "https://–≤–∞—à-—Å–∞–π—Ç.—Ä—É"

# --- –ü—Ä–æ—Å—Ç–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_appointments = {}

# ---- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ----

from maxgram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

def main_menu_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìù –ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏—ë–º")],
            [KeyboardButton(text="üåê –û—Ñ. —Å–∞–π—Ç"), KeyboardButton(text="üîñ –ú–æ–∏ –∑–∞–ø–∏—Å–∏")],
            [KeyboardButton(text="üåç –°–æ—Ü.—Å–µ—Ç–∏")]
        ],
        resize_keyboard=True, one_time_keyboard=False
    )

def services_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üíÜ –ú–∞—Å—Å–∞–∂")],
            [KeyboardButton(text="üíá –ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä")],
            [KeyboardButton(text="üíÖ –ù–æ–≥—Ç–∏")],
            [KeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True, one_time_keyboard=True
    )

def social_keyboard():
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=name, url=url)] for name, url in SOCIAL_LINKS
        ]
    )

def records_keyboard(records):
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–ø–∏—Å–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ—Ç–º–µ–Ω—ã
    btns = [
        [InlineKeyboardButton(text=f"–û—Ç–º–µ–Ω–∞: {rec}", callback_data=f"cancel:{rec}")]
        for rec in records
    ]
    return InlineKeyboardMarkup(inline_keyboard=btns) if btns else None

# ---- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ----

@bot.message("start")
async def handle_start(msg):
    await msg.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu_keyboard())

@bot.message()
async def handle_menu(msg):
    text = (msg.text or "").strip()
    user_id = msg.from_user.id

    if text == "üìù –ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏—ë–º":
        await msg.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:", reply_markup=services_keyboard())

    elif text == "üíÜ –ú–∞—Å—Å–∞–∂":
        # –í–°–¢–ê–í–¨–¢–ï –°–Æ–î–ê –í–ê–® –ö–û–î –û–¢–†–ê–ë–û–¢–ö–ò –ú–ê–°–°–ê–ñ–ê (–≤–∞—à –ø–æ—Ç–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤, –ø–æ–¥–±–æ—Ä –¥–∞—Ç—ã –∏ —Ç.–¥.)
        await msg.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏ –≤—Ä–µ–º—è ‚Äî –≤–∞—à —Å—Ü–µ–Ω–∞—Ä–∏–π –∑–¥–µ—Å—å.")

    elif text == "üíá –ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä":
        await msg.answer("–ó–∞–ø–∏—Å—å –∫ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—É –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–∫–æ—Ä–æ.")

    elif text == "üíÖ –ù–æ–≥—Ç–∏":
        await msg.answer("–ó–∞–ø–∏—Å—å –Ω–∞ –Ω–æ–≥—Ç–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Å–∫–æ—Ä–æ.")

    elif text == "üåê –û—Ñ. —Å–∞–π—Ç":
        await msg.answer(f"–ù–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç: {OFFICIAL_SITE}")

    elif text == "üåç –°–æ—Ü.—Å–µ—Ç–∏":
        await msg.answer("–ú—ã –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö:", reply_markup=social_keyboard())

    elif text == "üîñ –ú–æ–∏ –∑–∞–ø–∏—Å–∏":
        records = user_appointments.get(user_id, [])
        if not records:
            await msg.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π.")
            return
        await msg.answer(
            "–í–∞—à–∏ –∑–∞–ø–∏—Å–∏:",
            reply_markup=records_keyboard(records)
        )

    elif text == "‚óÄÔ∏è –ù–∞–∑–∞–¥":
        await msg.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_keyboard())
    else:
        await msg.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.")

# ---- Callback –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏ ----

@bot.callback()
async def handle_callback(call):
    if call.data.startswith("cancel:"):
        record = call.data.split(":", 1)[1]
        user_id = call.from_user.id
        recs = user_appointments.get(user_id, [])
        if record in recs:
            recs.remove(record)
            user_appointments[user_id] = recs
            await call.message.edit_text("–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        else:
            await call.message.edit_text("–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

# ---- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ----

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
